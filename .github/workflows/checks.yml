name: checks

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'CHANGELOG.md'
  pull_request:
    types: [ opened, reopened, review_requested, edited, ready_for_review, synchronize ]
  schedule:
    - cron: '0 6 * * 1-5'
env:
  SERVICE_NAME: gitactionboard

jobs:
  determine-changes:
    runs-on: ubuntu-22.04
    outputs:
      HAS_BACKEND_CHANGES: ${{ steps.changes.outputs.backend }}
      HAS_FRONTEND_CHANGES: ${{ steps.changes.outputs.frontend }}
    steps:
      - name: Checkout local repository
        uses: actions/checkout@v5
        with:
          path: ${{ github.workspace }}/${{ env.SERVICE_NAME }}
          fetch-depth: 5
      - name: Determine new changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
          working-directory: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/

  talisman-checks:
    runs-on: ubuntu-22.04
    if: ${{ github.actor != 'dependabot[bot]' && github.event_name != 'schedule' }}
    steps:
      - name: Checkout local repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 5
          path: ${{ github.workspace }}/${{ env.SERVICE_NAME }}
      - name: Install talisman and add to PATH
        run: |
          sh bin/install-talisman.sh
          echo "$GITHUB_WORKSPACE/$SERVICE_NAME" >> $GITHUB_PATH
        working-directory: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/
      - name: Talisman Verify
        run: ./run.sh talisman-verify
        working-directory: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/

  backend-dependency-checks:
    if: ${{ github.event_name == 'schedule' || needs.determine-changes.outputs.HAS_BACKEND_CHANGES == 'true' }}
    runs-on: ubuntu-22.04
    needs: [ determine-changes ]
    steps:
      - name: Checkout local repository
        uses: actions/checkout@v5
        with:
          path: ${{ github.workspace }}/${{ env.SERVICE_NAME }}
      - name: Install jenv
        run: |
          git clone https://github.com/gcuisinier/jenv.git ~/.jenv
          echo "$HOME/.jenv/bin" >> $GITHUB_PATH
      - name: Configure jenv
        run: |
          jenv init -
          jenv add ${JAVA_HOME_21_X64}
        working-directory: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache nvd nist data
        uses: actions/cache@v4
        id: nvd-nist-cache
        with:
          path: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/backend/.nvd-nist-cache
          key: ${{ runner.os }}-nvd-nist-cache-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-nvd-nist-cache-${{ steps.get-date.outputs.date }}
            ${{ runner.os }}-nvd-nist-cache
      - name: Cache gradle wrapper and jars
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ steps.get-date.outputs.date }}-
            ${{ runner.os }}-gradle-
      - name: Dependency Check
        run: ./run.sh check-backend
        working-directory: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/
      - name: Upload dependency check report to artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report.html
          path: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/backend/build/reports/dependency-check-report.html

  frontend-dependency-checks:
    if: ${{ github.event_name == 'schedule' || needs.determine-changes.outputs.HAS_FRONTEND_CHANGES == 'true' }}
    runs-on: ubuntu-22.04
    needs: [ determine-changes ]
    steps:
      - name: Checkout local repository
        uses: actions/checkout@v5
        with:
          path: ${{ github.workspace }}/${{ env.SERVICE_NAME }}
      - name: Install nvm at specific version
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
      - name: Dependency Check
        run: ./run.sh check-frontend
        working-directory: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/
