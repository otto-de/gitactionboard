plugins {
    id "java"
    id "idea"
    id "org.springframework.boot" version "2.7.4"
    id "io.spring.dependency-management" version "1.0.14.RELEASE"
    id "io.freefair.lombok" version "6.4.3"
    id "com.github.spotbugs" version "5.0.8"
    id "com.github.ben-manes.versions" version "0.42.0"
    id "org.owasp.dependencycheck" version "7.2.1"
    id "com.diffplug.spotless" version "6.11.0"
    id "info.solidsoft.pitest" version "1.9.0"
}

spotless {
    java {
        googleJavaFormat("1.15.0")
    }
}

lombok {
    version = "1.18.24"
    config["lombok.anyConstructor.addConstructorProperties"] = "true"
}

ext {
    javaUuidGeneratorVersion = "4.0.1"
    logstashVersion = "7.2"
    caffeineVersion = "3.1.1"
    wiremockVersion = "2.27.2"
    archUnitVersion = "0.23.1"
    snakeyamlVersion = "1.32"
    jUnit5PitestVersion = "1.0.0"
}

repositories {
    mavenCentral()
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

dependencies {
    implementation "org.yaml:snakeyaml:${snakeyamlVersion}"
    implementation ("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.yaml", module: "snakeyaml"
    }
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "com.fasterxml.uuid:java-uuid-generator:${javaUuidGeneratorVersion}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logstashVersion}"
    implementation "com.github.ben-manes.caffeine:caffeine:${caffeineVersion}"

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation "com.github.tomakehurst:wiremock:${wiremockVersion}"
    testImplementation "com.tngtech.archunit:archunit-junit5:${archUnitVersion}"
    testImplementation "org.pitest:pitest-junit5-plugin:${jUnit5PitestVersion}"
}

group = "de.otto.platform"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tag {
    message fromMandatorySystemProperty('message')
}

import java.text.SimpleDateFormat

bootJar {
    manifest {
        attributes(
                'Implementation-Vendor': project.group,
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Built-By': System.properties['user.name'],
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

apply from: "${rootDir}/gradle/test.gradle"
apply from: "${rootDir}/gradle/spotbugs.gradle"
apply from: "${rootDir}/gradle/dependencycheck.gradle"
apply from: "${rootDir}/gradle/checkstyle.gradle"
apply from: "${rootDir}/gradle/pmd.gradle"
apply from: "${rootDir}/gradle/jacoco.gradle"
apply from: "${rootDir}/gradle/pitest.gradle"
