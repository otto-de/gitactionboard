import org.gradle.internal.logging.text.StyledTextOutputFactory

import static org.gradle.internal.logging.text.StyledTextOutput.Style

tasks.withType(Test) {
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = false
    }

    def out = services.get(StyledTextOutputFactory).create("testResults")

    afterSuite { desc, result ->
        if (!desc.parent) {
            out.withStyle(Style.Header).println("Result: ${result.resultType} (Total ${result.testCount} tests)")
            out.withStyle(Style.Success).println("        ${result.successfulTestCount} successes")
            out.withStyle(Style.Failure).println("        ${result.failedTestCount} failures")
            out.withStyle(Style.Info).println("        ${result.skippedTestCount} skipped")
        }
    }
}

// unit tests
test {
    useJUnitPlatform() {
        excludeTags "integration"
    }

    reports.html.enabled = false
}

// integration tests
task integrationTest(type: Test) {
    description = "Runs the integration tests."
    group = "verification"

    dependsOn test

    useJUnitPlatform() {
        includeTags "integration"
    }

    reports.html.enabled = false
}

// Make sure `check` task calls integration test
check.dependsOn integrationTest

// Merge test reports
task mergeTestReports(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")

    // These must point to the binary test results directory generated by a Test task instance...
    reportOn files("$buildDir/test-results/test/binary", "$buildDir/test-results/integrationTest/binary")
}

integrationTest.finalizedBy mergeTestReports
